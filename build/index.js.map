{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAExD,MAAM,CAAC,MAAM,YAAY,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;AACrE,MAAM,CAAC,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;AACzE,MAAM,CAAC,MAAM,aAAa,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC;AACvE,MAAM,CAAC,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;AACzE,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EAAE,KAAa,EAAE,EAAE,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;AACzG,MAAM,CAAC,MAAM,sBAAsB,GAAG,KAAK,EAAE,SAAiB,EAAE,EAAE,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;AACzH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAC3F,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAC3F,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,GAAW,EAAE,SAAiB,EAAE,EAAE,CAAC,mBAAmB,CAAC,eAAe,CAAC,GAAG,EAAE,SAAS,CAAC,CAAA;AACtH,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,YAAoB,EAAE,YAAoB,EAAE,YAAoB,EAC7F,YAAoB,EAAE,YAAoB,EAAE,YAAoB,EAAE,KAAa,EAAE,EAAE,CAAC,mBAAmB,CAAC,aAAa,CAAC,YAAY,EACjI,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAC/E,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,KAAa,EAAE,EAAE,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACrF,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,EACxB,SAAiB,EACjB,UAAoB,EACpB,IAAc,EACb,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AAC3D,MAAM,CAAC,MAAM,UAAU,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC,UAAU,EAAE,CAAC;AAEjE,MAAM,CAAC,MAAM,YAAY,GAAG,KAAK,EAChC,SAAiB,EACjB,UAAoB,EACpB,IAAc,EACb,EAAE,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AAEnE,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC","sourcesContent":["import ToneGeneratorModule from \"./ToneGeneratorModule\";\n\nexport const getIsPlaying = () => ToneGeneratorModule.getIsPlaying();\nexport const playWhiteNoise = () => ToneGeneratorModule.playWhiteNoise();\nexport const playPinkNoise = () => ToneGeneratorModule.playPinkNoise();\nexport const playBrownNoise = () => ToneGeneratorModule.playBrownNoise();\nexport const setWhiteNoisePitch = async (pitch: number) => ToneGeneratorModule.setWhiteNoisePitch(pitch);\nexport const setWhiteNoiseAmplitude = async (amplitude: number) => ToneGeneratorModule.setWhiteNoiseAmplitude(amplitude);\nexport const playSoundFromURL = (URL: string) => ToneGeneratorModule.playSoundFromURL(URL);\nexport const stopSoundFromURL = (URL: string) => ToneGeneratorModule.stopSoundFromURL(URL);\nexport const setVolumeForURL = (URL: string, amplitude: number) => ToneGeneratorModule.setVolumeForURL(URL, amplitude)\nexport const pinkNoiseTest = (coefficient1: number, coefficient2: number, coefficient3: number,\n\tcoefficient4: number, coefficient5: number, coefficient6: number, pitch: number) => ToneGeneratorModule.pinkNoiseTest(coefficient1,\n\t\tcoefficient2, coefficient3, coefficient4, coefficient5, coefficient6, pitch);\nexport const changePitch = (pitch: number) => ToneGeneratorModule.changePitch(pitch);\nexport const play = async (\n\tfrequency: number,\n\tamplitudes: number[],\n\tadsr: number[],\n) => ToneGeneratorModule.play(frequency, amplitudes, adsr);\nexport const performFFT = () => ToneGeneratorModule.performFFT();\n\nexport const setFrequency = async (\n\tfrequency: number,\n\tamplitudes: number[],\n\tadsr: number[],\n) => ToneGeneratorModule.setFrequency(frequency, amplitudes, adsr);\n\nexport const stop = async () => ToneGeneratorModule.stop();\n"]}